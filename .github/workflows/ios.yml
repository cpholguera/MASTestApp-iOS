name: Xcode - Build, Test & Screenshot

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build, Test and Capture Screenshot on iOS Simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo "$default" > default
          echo "Using default scheme: $default"

      - name: Build for Testing
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          # Select the first available iPhone device from xctrace output
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          if [ "$scheme" = "default" ]; then scheme=$(cat default); fi
          if ls -A | grep -iq "\.xcworkspace$"; then
            filetype_parameter="workspace"
            file_to_build=$(ls -A | grep -i "\.xcworkspace$")
          else
            filetype_parameter="project"
            file_to_build=$(ls -A | grep -i "\.xcodeproj$")
          fi
          file_to_build=$(echo $file_to_build | awk '{$1=$1;print}')
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"

      - name: Run Tests
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          # Get the device name as above
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          if [ "$scheme" = "default" ]; then scheme=$(cat default); fi
          if ls -A | grep -iq "\.xcworkspace$"; then
            filetype_parameter="workspace"
            file_to_build=$(ls -A | grep -i "\.xcworkspace$")
          else
            filetype_parameter="project"
            file_to_build=$(ls -A | grep -i "\.xcodeproj$")
          fi
          file_to_build=$(echo $file_to_build | awk '{$1=$1;print}')
          xcodebuild test -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"

      - name: Capture Screenshot
        run: |
          # Allow time for the app to fully launch; adjust if needed.
          sleep 5
          xcrun simctl io booted screenshot screenshot.png

      - name: Upload Screenshot Artifact
        uses: actions/upload-artifact@v4
        with:
          name: iOS-Screenshot
          path: screenshot.png
