name: Build iOS App and Run Appium Test

on:
  push:
    branches:
      - main
  # pull_request:
  #   branches:
  #     - main
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew install ldid
          brew install cocoapods
          pod install --repo-update || true

      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo "DEFAULT_SCHEME=$default" >> $GITHUB_ENV
          echo "Using default scheme: $default"

      - name: Build the app (unsigned)
        run: |
          xcodebuild archive \
            -project "MASTestApp.xcodeproj" \
            -scheme "$DEFAULT_SCHEME" \
            -archivePath "$GITHUB_WORKSPACE/build/MASTestApp.xcarchive" \
            -configuration Release \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO

      - name: Add Entitlements
        run: |
          ldid -Sentitlements.plist "$GITHUB_WORKSPACE/build/MASTestApp.xcarchive/Products/Applications/MASTestApp.app/MASTestApp"

      - name: Create IPA manually
        run: |
          cd "$GITHUB_WORKSPACE/build/MASTestApp.xcarchive/Products" || exit
          mv Applications Payload
          zip -r9q MASTestApp.zip Payload
          mv MASTestApp.zip MASTestApp.ipa
          mkdir -p "$GITHUB_WORKSPACE/output"
          mv MASTestApp.ipa "$GITHUB_WORKSPACE/output/MASTestApp-unsigned.ipa"

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Unsigned-iOS-App
          path: output/MASTestApp-unsigned.ipa

      - name: Install Appium and Python Dependencies
        run: |
          npm install -g appium
          python3 -m pip install --break-system-packages Appium-Python-Client
      
      - name: Install Appium Driver for XCUITest
        run: |
          appium driver install xcuitest

      - name: Start Appium Server
        run: |
          # Start Appium in the background and give it a few seconds to initialize
          appium & 
          sleep 10

      - name: Set Xcode version
        run: |
          sudo xcode-select --switch /Applications/Xcode.app
          xcodebuild -version

      - name: Warm up iOS SDK version command
        run: |
          echo "Warming up xcrun..."
          # This should output the SDK version (e.g. 17.4); if it hangs here, the issue is with Xcode/CLI tools.
          xcrun --sdk iphonesimulator --show-sdk-version

      - name: Boot Simulator
        run: |
          set -e
          xcrun simctl shutdown all
          xcrun simctl erase all
          if ! xcrun simctl boot "iPhone 15"; then
            echo "Failed to boot simulator 'iPhone 15'. Exiting."
            exit 1
          fi
          if ! xcrun simctl bootstatus "iPhone 15" -b; then
            echo "Simulator 'iPhone 15' did not finish booting in time. Exiting."
            exit 1
          fi

      - name: Run Appium UI Test
        env:
          # Pass the built app's path to the test script; Appium requires the .app folder.
          APP_PATH: "build/MASTestApp.xcarchive/Products/Payload/MASTestApp.app"
        run: |
          python3 tools/appium_script.py

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: UI-Test-Artifacts
          path: |
            before_start.png
            after_start.png
            final_screen.xml
